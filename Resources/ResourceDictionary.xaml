<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:tb="http://www.hardcodet.net/taskbar"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxr="http://schemas.devexpress.com/winfx/2008/xaml/ribbon"
    xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
    xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
    xmlns:dxet="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:viewmodels="clr-namespace:FileExplorer.ViewModel">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary>
            <dxmvvm:ObjectToObjectConverter x:Key="MessageIconConverter">
                <dxmvvm:MapItem Source="Question" Target="&#xF059;" />
                <dxmvvm:MapItem Source="Information" Target="&#xF05A;" />
                <dxmvvm:MapItem Source="Exclamation" Target="&#xF071;" />
            </dxmvvm:ObjectToObjectConverter>
            <dxmvvm:ObjectToObjectConverter x:Key="ColumnSortOrderToIconConverter">
                <dxmvvm:MapItem Source="Ascending" Target="/Assets/Images/SortAsc.png" />
                <dxmvvm:MapItem Source="Descending" Target="/Assets/Images/SortDesc.png" />
            </dxmvvm:ObjectToObjectConverter>
            <dxmvvm:ObjectToObjectConverter x:Key="VisibilityToInverseBooleanConverter">
                <dxmvvm:MapItem Source="Visible" Target="False" />
                <dxmvvm:MapItem Source="Collapsed" Target="True" />
                <dxmvvm:MapItem Source="Hidden" Target="True" />
            </dxmvvm:ObjectToObjectConverter>
        </ResourceDictionary>
        <ResourceDictionary>            
            <system:String x:Key="IconBack">&#xF060;</system:String>
            <system:String x:Key="IconNext">&#xF061;</system:String>
            <system:String x:Key="IconDown">&#xF063;</system:String>
            <system:String x:Key="IconUp">&#xF3BF;</system:String>
            <system:String x:Key="IconAngleDown">&#xF107;</system:String>
            <system:String x:Key="IconRefresh">&#xF2F1;</system:String>
            <system:String x:Key="IconFilter">&#xF0B0;</system:String>
            <system:String x:Key="IconSearch">&#xF002;</system:String>
            <system:String x:Key="IconCancel">&#xF00D;</system:String>
            <system:String x:Key="IconDelete">&#xF056;</system:String>
            <system:String x:Key="IconEdit">&#xF303;</system:String>
            <system:String x:Key="IconClone">&#xF24D;</system:String>
            <system:String x:Key="IconFolder">&#xF07C;</system:String>
        </ResourceDictionary>
        <ResourceDictionary>
            <Style x:Key="IconText" TargetType="TextBlock">
                <Setter Property="FontFamily" Value="/Assets/Fonts/#Font AweSome 5 Free Solid" />
            </Style>
            <Style x:Key="IconLabel" TargetType="Label">
                <Setter Property="FontFamily" Value="/Assets/Fonts/#Font AweSome 5 Free Solid" />
            </Style>
            <Style x:Key="DialogButtonStyle" TargetType="Button">
                <Setter Property="Margin" Value="10,0,0,0" />
                <Setter Property="MinWidth" Value="75" />
                <Setter Property="MinHeight" Value="25" />
            </Style>
            <Style x:Key="DialogWindowStyle" TargetType="dx:DXDialogWindow">
                <Setter Property="Padding" Value="0" />
                <Setter Property="ShowIcon" Value="False" />
                <Setter Property="Width" Value="{DXBinding '@Self.Content.MinWidth + 20'}" />
                <Setter Property="Height" Value="{DXBinding '@Self.Content.MinHeight + 90'}" />
                <Setter Property="MinWidth" Value="{DXBinding '@Self.Content.MinWidth + 20'}" />
                <Setter Property="MinHeight" Value="{DXBinding '@Self.Content.MinHeight + 90'}" />
                <Setter Property="ResizeMode" Value="{DXBinding '@Self.Content.Tag', TargetNullValue=CanResize}" />
                <Setter Property="CommandButtonsPanel">
                    <Setter.Value>
                        <ItemsPanelTemplate>
                            <StackPanel HorizontalAlignment="Right" Orientation="Horizontal" />
                        </ItemsPanelTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="CommandButtonStyle" Value="{StaticResource DialogButtonStyle}" />
                <Style.Triggers>
                    <Trigger Property="ResizeMode" Value="NoResize">
                        <Setter Property="SizeToContent" Value="WidthAndHeight" />
                    </Trigger>
                </Style.Triggers>
            </Style>
            <Style x:Key="FlatButtonStyle" TargetType="Button">
                <Setter Property="FontFamily" Value="/Assets/Fonts/#Font AweSome 5 Free Solid" />
                <Setter Property="FontWeight" Value="Light" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="FontSize" Value="14" />
                <Setter Property="Width" Value="14" />
                <Setter Property="Margin" Value="5,0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Label x:Name="ButtonLabel" Content="{TemplateBinding Content}" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="ButtonLabel" Property="Foreground" Value="{dxi:ThemeResource {dxt:PaletteBrushThemeKey ResourceKey=Focused}}" />
                                </Trigger>
                                <Trigger Property ="IsPressed" Value ="True">
                                    <Setter Property="FontSize" Value="12" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
        <ResourceDictionary>
            <DataTemplate x:Key="DragDropHintTemplate">
                <Border Padding="5" BorderThickness="{dxi:ThemeResource {dxet:FlyoutControlThemeKey ResourceKey=BorderThickness}}"
                        BorderBrush="{dxi:ThemeResource {dxet:FlyoutControlThemeKey ResourceKey=BorderBrush}}" Background="{dxi:ThemeResource {dxet:FlyoutControlThemeKey ResourceKey=Background}}">
                    <StackPanel>
                        <dxe:ListBoxEdit ShowBorder="False" ItemsSource="{Binding Records}">
                            <dxe:ListBoxEdit.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="16" Height="16" Source="{Binding SmallIcon}" />
                                        <TextBlock Margin="5,0,0,0" Text="{Binding Name}" />
                                    </StackPanel>
                                </DataTemplate>
                            </dxe:ListBoxEdit.ItemTemplate>
                        </dxe:ListBoxEdit>
                        <StackPanel Visibility="{Binding DropPosition, Converter={dxmvvm:NumericToVisibilityConverter}}">
                            <TextBlock Margin="20,5" FontSize="16" Text="{StaticResource IconDown}" Style="{StaticResource IconText}" />
                            <StackPanel Margin="4" Orientation="Horizontal">
                                <Image Width="16" Height="16" Source="{Binding TargetRecord.SmallIcon}" />
                                <TextBlock Margin="5,0,0,0" Text="{Binding TargetRecord.Name}" />
                            </StackPanel>
                        </StackPanel>
                    </StackPanel>
                </Border>
            </DataTemplate>
        </ResourceDictionary>
        <ResourceDictionary>
            <UserControl x:Key="TaskbarIconContainer" DataContext="{dxmvvm:ViewModelSource Type=viewmodels:TaskbarViewModel}">
                <tb:TaskbarIcon ToolTipText="File Explorer" IconSource="/Assets/Images/Explorer.ico" DoubleClickCommand="{Binding OpenDefaultCommand}">
                    <tb:TaskbarIcon.ContextMenu>
                        <ContextMenu Padding="5" dx:ThemeManager.ThemeName="Office2019Black">
                            <MenuItem Header="{Binding QuickAccess, Source={StaticResource ResourceProvider}}" Command="{Binding OpenQuickAccessCommand}">
                                <MenuItem.Icon>
                                    <Image Source="/Assets/Images/QuickAccess16.png" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{Binding Computer, Source={StaticResource ResourceProvider}}" Command="{Binding OpenComputerCommand}">
                                <MenuItem.Icon>
                                    <Image Source="/Assets/Images/Computer16.png" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="{Binding Exit, Source={StaticResource ResourceProvider}}" Command="{Binding ExitCommand}" />
                        </ContextMenu>
                    </tb:TaskbarIcon.ContextMenu>
                </tb:TaskbarIcon>
            </UserControl>
        </ResourceDictionary>
        <ResourceDictionary>
            <ControlTemplate x:Key="CaptionBorderTemplate" TargetType="{x:Type dxr:RibbonCheckedBorderControl}">
                <Grid x:Name="PART_Root" Background="{dxi:ThemeResource {dxt:PaletteBrushThemeKey ResourceKey=Window.Background}}">
                    <Border x:Name="IsDefault" Margin="14,0" Background="Transparent" BorderBrush="Transparent" BorderThickness="0,0,0,3" />
                    <ContentPresenter />
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Margin" From="14,0" To="0" Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <ThicknessAnimation Storyboard.TargetName="IsDefault" Storyboard.TargetProperty="Margin" From="0" To="14,0" Duration="0:0:0.2" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter TargetName="IsDefault" Property="BorderBrush" Value="{dxi:ThemeResource {dxt:PaletteBrushThemeKey ResourceKey=Focused}}" />
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
            <Style TargetType="{x:Type dxr:RibbonPageCaptionControl}">
                <Style.Triggers>
                    <DataTrigger Binding="{DXBinding '@s.($dx:ThemeManager.TreeWalker).ThemeName.Contains(`VS2017Dark`)'}" Value="True">
                        <Setter Property="BorderTemplate" Value="{StaticResource CaptionBorderTemplate}" />
                        <Setter Property="HighlightedBorderTemplate" Value="{StaticResource CaptionBorderTemplate}" />
                        <Setter Property="BorderTemplateInMinimizedRibbon" Value="{StaticResource CaptionBorderTemplate}" />                        
                        <Setter Property="HighlightedBorderTemplateInMinimizedRibbon" Value="{StaticResource CaptionBorderTemplate}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style TargetType="{x:Type dxb:BarCheckItem}">
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding IsChecked, RelativeSource={RelativeSource Self}}" Value="True" />
                            <Condition Binding="{DXBinding '@s.($dx:ThemeManager.TreeWalker).ThemeName.Contains(`VS2017Dark`)'}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <MultiDataTrigger.Setters>
                            <Setter Property="Background" Value="{dxi:ThemeResource {dxt:PaletteBrushThemeKey ResourceKey=Focused}}" />
                        </MultiDataTrigger.Setters>
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

</ResourceDictionary>